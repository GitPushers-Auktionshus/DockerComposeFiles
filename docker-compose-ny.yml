version: '3.8'

services:
  mongodb:
    image: mongo:latest
    hostname: "mongodb-dev"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - 27018:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - default

  articleservice:
    image: gitpushers/article-service:latest-dev
    container_name: article
    environment:
      - HostnameVault=vault
      - ImagePath=/srv/images/
      - UsersDatabase=Users
      - UserCollection=user
      - AuctionHouseCollection=auctionhouse
      - InventoryDatabase=Inventory
      - ArticleCollection=article
    ports:
      - 5002:80
    depends_on:
      - script
    healthcheck:
      retries: 5
    networks:
      - default
    volumes:
      - article-image-storage:/srv/images

  userservice:
    image: gitpushers/users-service:latest-dev
    container_name: user
    environment:
      - HostnameVault=vault
      - UsersDatabase=Users
      - UserCollection=user
    ports:
      - 5004:80
    depends_on:
      - script
    healthcheck:
      retries: 5
    networks:
      - default

  auctionplanningservice:
    image: gitpushers/auctionplanning-service:latest-dev
    container_name: auctionplanning
    environment:
      - HostnameVault=vault
      - AuctionsDatabase=Auctions
      - AuctionCollection=listing
      - InventoryDatabase=Inventory
      - ArticleCollection=article
    ports:
      - 5003:80
    depends_on:
      - script
    healthcheck:
      retries: 5
    networks:
      - default

  authentication:
    image: gitpushers/auth-service:latest-dev
    container_name: authentication
    environment:
      - UsersDatabase=Users
      - UserCollection=user
      - HostnameVault=vault
    ports:
      - 5001:80
    depends_on:
      - script
    healthcheck:
      retries: 5
    networks:
      - default

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - default
    volumes:
      - grafana-storage:/var/lib/grafana

  vault_dev:
    image: hashicorp/vault:latest
    restart: on-failure:10
    hostname: vault
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address":"0.0.0.0:8201","tls_disable":"0", "tls_cert_file":"/data/cert.pem","tls_key_file":"/data/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

  script:
    image: hashicorp/vault:latest
    command: sh "/app/populate_vault.sh"
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./populate_vault.sh:/app/populate_vault.sh

volumes:
  mongodb_data_container:
  grafana-storage:
    external: false
  article-image-storage:
    external: false

networks:
  default:
    driver: bridge
